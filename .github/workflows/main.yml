name: A workflow for my Hello World App
on:
  push:
    branches:
      - feature/NayChi

jobs:
  UnitTests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 23
        uses: actions/setup-java@v2
        with:
          java-version: '23'
          distribution: 'adopt'
      - name: Unit Tests
        run: |
          mvn -Dtest=com.napier.devops.AppTest test
          mvn -Dtest=com.napier.devops.CityTest test
          mvn -Dtest=com.napier.devops.CountryLanguageTest test
          mvn -Dtest=com.napier.devops.CountryTest test
          mvn -Dtest=com.napier.devops.DatabaseServiceTest test
          mvn -Dtest=com.napier.devops.PopulationReportTest test
      - name: CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./target/site/jacoco/jacoco.xml
          flags: Unit Tests # optional
          verbose: true # optional (default = false)
  IntegrationTests:
    name: Integration Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 23
        uses: actions/setup-java@v2
        with:
          java-version: '23'
          distribution: 'adopt'
      - name: Integration Tests and CodeCov
        run: |
          docker build -t database ./db 
          docker run --name world -dp 33060:3306 database
          mvn -Dtest=com.napier.devops.AppIntegrationIT test          
          docker stop world
          docker rm world
          docker image rm database
      - name: CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          directory: ./target/site/jacoco/jacoco.xml
          flags: Integration Tests # optional
          verbose: true # optional (default = false)
  build:
    name: Build and Start Using docker compose
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up JDK 23
        uses: actions/setup-java@v2
        with:
          java-version: '23'
          distribution: 'adopt'
      - name: Package and Run docker compose
        run: |
          mvn package -DskipTests
          docker compose up --abort-on-container-exit
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
            repo_token: "${{ secrets.GITHUB_TOKEN }}"
            prerelease: false
            automatic_release_tag: "latest"
            files: |
              ./target/*.jar
      - name: Copy Output
        run: docker container cp dev-ops-group1-app-1:./tmp/reports ./
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4.6.8
        with:
          branch: reports # The branch the action should deploy to.
          folder: reports # The folder we are copying